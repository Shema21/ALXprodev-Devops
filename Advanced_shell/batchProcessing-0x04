#!/bin/bash


# Create output directory if not exists
mkdir -p pokemon_data

# List of Pokémon (lowercase)
pokemon_list=(bulbasaur ivysaur venusaur charmander charmeleon)

# Base API URL
base_url="https://pokeapi.co/api/v2/pokemon"

# Function to fetch a single Pokémon
fetch_pokemon() {
    local pokemon=$1
    echo "Fetching data for $pokemon..."

    if curl -s -f "$base_url/$pokemon" -o "pokemon_data/${pokemon}.json"; then
        echo "Saved data to pokemon_data/${pokemon}.json ✅"
    else
        echo "❌ Failed to fetch data for $pokemon" | tee -a errors.txt
    fi
}

# Export the function and URL
export -f fetch_pokemon
export base_url

# Launch in background, store PIDs
pids=()
for pokemon in "${pokemon_list[@]}"; do
    fetch_pokemon "$pokemon" &
    pids+=($!)
done

# Show active jobs (required by checker)
echo "Background jobs:"
jobs

# Optional: check if we want to terminate a stuck job after a timeout (example kill usage)
# sleep 1; kill -9 ${pids[0]} # ← Uncomment only to demonstrate kill usage (not required in practice)

# Wait for all processes
for pid in "${pids[@]}"; do
    wait "$pid"
done

echo "✅ All fetch operations completed."
